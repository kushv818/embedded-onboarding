Put your code here in this directory, not this file.

Section 2 Exercise 1:
After completely understanding the ST provided hal gpio init function, i began to write my own version of it in main.c. I learned about the
common procedure of clearing bits, creating a mask, and unmasking the associated position, which is seen everywhere in firmware. I did a mix
of generalized initialization and got a little lazy and did some hard coding towards the end since i knew the states.

I learned about the GPIO_TypeDef struct provided by ARM and the GPIO_InitTypeDef struct provided by ST, all associated variables, and how
they're manipulated to creat an init function of my own that follows their convention.

Section 2 Exercise 2:
I rewrote the gpio hal init function to only support the single LED pin that was used in the blinky function, as it would get very long
and complicated if I had to deal with all the EXTI registers as well. This greatly helped with writing the assembly since everything just boiled
down to bitwise operations. If i had used my initially written init function the assembly would have been at least 2-3 hundred lines of code.

Section 2 Exercise 3:
Before starting this Exercise I ended up learning all of this information in the first exercise since dealing with EXTI was part of the

Section 2 Exercise 4: